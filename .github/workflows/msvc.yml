name: MSVC Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    strategy:
        matrix:
          os: [windows-2022]
          arch: [x86, x64]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
#    - uses: TheMrMilchmann/setup-msvc-dev@v3
#      with:
#        arch: x64       

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

#    - name: Restore NuGet packages
#      working-directory: ${{env.GITHUB_WORKSPACE}}
#      run: nuget restore ${{env.SOLUTION_FILE_PATH}}
#
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild nssm.vcxproj /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{ matrix.arch }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: nssm-${{ matrix.arch }}
        path: ${{ github.workspace }}/out/Release/**/nssm.exe
        retention-days: 7